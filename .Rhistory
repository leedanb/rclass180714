whatsex<-function(x){
sub<-substr(x,8,8)
res<- switch(
sub,
"1"="남"
"2"="여"
"3"="남"
"4"="여"
"5"="외"
"6"="외"
)
return(res)
}
whatsex<-function(x){
sex<-substr(x,8,8)
res<-switch(
sex,
"1"|"3"="남"
"2"|"4"="여"
"5"|"6"="외"
)
return(res)
}
whatsex<-function(x){
sex<-substr(x,8,8)
res<-switch(
sex,
"1"|"3"="남",
"2"|"4"="여",
"5"|"6"="외"
)
return(res)
}
whatsex<-function(x){
sex<-substr(x,8,8)
res<-switch(
sex,
"1"|"3"="남",
"2"|"4"="여",
"5"|"6"="외"
)
return(res)
}
whatsex<-function(x){
sex<-substr(x,8,8)
return(switch(
sex,
"1"|"3"="남",
"2"|"4"="여",
"5"|"6"="외"
))
}
whatsex<-function(x){
sex<-substr(x,8,8)
return(switch(
sex,
"1"||"3"="남",
"2"||"4"="여",
"5"||"6"="외"
))
}
whatsex<-function(x){
sex<-substr(x,8,8)
return(switch(
sex,
"1","3"="남",
"2","4"="여",
"5","6"="외"
))
}
whatsex("800101-1")
whatsex<-function(x){
sex<-substr(x,8,8)
return(switch(
sex,
"1"="남",
"3"="남",
"2"="여",
"4"="여",
"5"="외",
"6"="외"
))
}
whatsex("800101-1")
whatsex<-function(x){
sex<-substr(x,8,8)
return(switch(
sex,
"1"="남",
"3"="남",
"2"="여",
"4"="여",
"5"="외",
"6"="외"
"잘못된값"
))
}
whatsex<-function(x){
sex<-substr(x,8,8)
return(switch(
sex,
"1"="남",
"3"="남",
"2"="여",
"4"="여",
"5"="외",
"6"="외",
"잘못된값"
))
}
whatsex("800101-8")
whatsex("800101-8")
whatsex("800101-1")
whatsex<-function(x){
return(switch(
substr(x,8,8),
"1"="남",
"3"="남",
"2"="여",
"4"="여",
"5"="외",
"6"="외",
"잘못된값"
))
}
whatsex("800101-8")
whatsex<-function(x){
return(switch(substr(x,8,8),
"1"="남",
"3"="남",
"2"="여",
"4"="여",
"5"="외",
"6"="외",
"잘못된값"
))
}
whatsex("800101-8")
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김" else
if(comVal+1==myVal)"이김"else
if(comVal==3 & myVal==1)"이김"
return(res)
}
function(sample(1:3,1,replace=TRUE),2)
rps(sample(1:3,1,replace=TRUE),2)
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김" else
if(comVal+1==myVal)"이김"else
if(comVal==3 & myVal==1)"이김" else
"패배"
return(res)
}
rps(sample(1:3,1,replace=TRUE),2)
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김" else
if(comVal+1==myVal)"이김"else
if(comVal==3 & myVal==1)"이김" else
"패배"
return("comVal:",comVal,"myVal:",myVal,myVal,res)
}
rps(sample(1:3,1,replace=TRUE),2)
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김" else
if(comVal+1==myVal)"이김"else
if(comVal==3 & myVal==1)"이김" else
"패배"
return("comVal:",comVal,"myVal:",myVal,myVal,res)
}
rps(sample(1:3,1,replace=TRUE),2)
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김" else
if(comVal+1==myVal)"이김"else
if(comVal==3 & myVal==1)"이김" else
"패배"
return(c("comVal:",comVal,"myVal:",myVal,myVal,res))
}
rps(sample(1:3,1,replace=TRUE),2)
rps<-function(u,i){
return(if(y==i)"비김"else
if(y+1==i)"이김"else
if(y=3&i=1)"이김"else
"패배")
}
rps<-function(u,i){
return(if(y==i)"비김"else
if(y+1==i)"이김"else
if(y==3&i==1)"이김"else
"패배")
}
kk<-sample(1:3,2,replace:TRUE)
kk<-sample(1:3,2,replace:TRUE)
u<-kk[1]
i<-kk[2]
cat("u",u,"i",i,i,rps(u,i))
kk<-sample(1:3,2,replace:TRUE)
kk<-sample(1:3,2,replace=TRUE)
u<-kk[1]
i<-kk[2]
cat("u",u,"i",i,i,rps(u,i))
u<-kk[1]
i<-kk[2]
cat("u",u,"i",i,i,rps(u,i))
rps<-function(u,i){
return(if(u==i)"비김"else
if(u+1==i)"이김"else
if(u==3&i==1)"이김"else
"패배")
}
cat("u",u,"i",i,i,rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김"else
if(myVal==comVal+1)"이김"else
if(myVal==1&comVal==3)"이김"else
"패배"
return(res)
}
kk<-sample(1:3,2,replace=TRUE)
comVal<-kk[1]
myVal<kk[2]
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김"else
if(myVal==comVal+1)"이김"else
if(myVal==1&comVal==3)"이김"else
"패배"
return(res)
}
kk<-sample(1:3,2,replace=TRUE)
comVal<-kk[1]
myVal<kk[2]
kk<-sample(1:3,2,replace=TRUE)
comVal<-kk[1]
myVal<kk[2]
comVal<-kk[1]
myVal<-kk[2]
#[1] FALSE
cat("comVal",comVal,"myVal",myVal,"결과:myVal",rps(comVal,myVal))
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김" else
if(comVal+1==myVal)"이김"else
if(comVal==3 & myVal==1)"이김" else
"패배"
return(c("comVal:",comVal,"myVal:",myVal,myVal,res))
}
rps<-function(comVal,myVal){
res<-if(comVal==myVal)"비김"else
if(myVal==comVal+1)"이김"else
if(myVal==1&comVal==3)"이김"else
"패배"
return(res)
}
kk<-sample(1:3,2,replace=TRUE)
comVal<-kk[1]
myVal<-kk[2]
#[1] FALSE
cat("comVal",comVal,"myVal",myVal,"결과:myVal",rps(comVal,myVal))
#[1] FALSE
cat("comVal",comVal,"myVal",myVal,"결과:myVal",rps(comVal,myVal))
#[1] FALSE
cat("comVal",comVal,"myVal",myVal,"결과:myVal",rps(comVal,myVal))
rps<-function(u,i){
return(if(u==i)"비김"else
if(u+1==i)"이김"else
if(u==3&i==1)"이김"else
"패배")
}
kk<-sample(1:3,2,replace=TRUE)
u<-kk[1]
i<-kk[2]
cat("u",u,"i",i,"i",rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
cat("u",u,"i",i,"i",rps(u,i))
rps<-function(x){
return("이김")
}
rps(3)
rps<-function(x){
return(switch(toString(com-sample(1:3,1,replace=TRUE)),
"0"="tie",
"1"="win",
"-2"="win",
"-1"="lose",
"2"="lose"
))
}
rps<-function(x){
com<-sample(1:3,1,replace=TRUE)
switch(toString(com-x),
"0"="tie",
"1"="win",
"-2"="win",
"-1"="lose",
"2"="lose"
)
return(switch)
}
rps(2)
rps<-function(x){
return(switch(toString(com-sample(1:3,1,replace=TRUE)),
"0"="tie",
"1"="win",
"-2"="win",
"-1"="lose",
"2"="lose"
))
}
rps(2)
rps<-function(x){
return(switch(toString(sample(1:3,1,replace=TRUE-x)),
"0"="tie",
"1"="win",
"-2"="win",
"-1"="lose",
"2"="lose"
))
}
rps(2)
rps(2)
rps(2)
rps(2)
rps(2)
rps(2)
rps(2)
# for loop
print(paste("This year is",2010))
ste("This year is",2011))
print(paste("This year is",2012))
print(paste("This year is",2018))
print(paste("This year is",2011))
print(paste("This year is",2012))
print(paste("This year is",2018))
for(){
print(paste("This is year is",x))
}
for(x in c(2012,2011,2010)){
print(paste("This is year is",x))
}
for(x in c(2010:2018)){
print(paste("This is year is",x))
}
for(x in (2010:2018)){
print(paste("This is year is",x))
}
for(x in(1:10)){
print(paste(,x))
}
for(x in(1:10)){
print(paste(x))
}
# for loop
print(paste("This year is",2010))
for(x in(2010:2018)){
print(paset("This year is",x))
}
for(x in(2010:2018)){
print(paste("This year is",x))
}
for(x in 1:10){
print(x)
}
#1~10까지 합
x<-0
for(y in 1:10){
x=x+y
}
x
x<-0
for(y in 1:10){
if(y%%2==0)x=x+y
}
x
for(y in 1:10){
if(y%%2==1)x=x+y
}
x
x<-0
for(y in 1:10){
if(y%%2==1)x=x+y
}
x
y<-seq(1:10 by 2)
y<-seq(1:10, by 2)
x<-0
x<-0
for(y in 1:10){
x=x+y
}
x
x<-0
for(y in 1:10){
if(y/2%%==0)x=x+y
}
x<-0
for(y in 1:10){
if(y%%2==0) x=x+y
}
x
Y<-C("홍길동",175.6,5000,T)
y<-C("홍길동",175.6,5000,T)
y<-c("홍길동",175.6,5000,T)
lst<- list("홍길동",175.6,5000,T)
lst
y<-c("홍길동",175.6,5000,T)
y
lst[[1]]
y[[1]]
y[1]
y[2]
y[[2]]
lst[1]
lst[[1]]
lst<-list(name="홍길동",height=176.6,sal=5000,employee=T)
lst
lst<-list(name="홍길동",height=176.6,sal=5000,employee=T)
lst
lst$name
length(lst)
#data.frame (85쪽)
stu<-c("지훈","유진","동현","민지")
stu
eng<-c(90,80,60,70)
eng
math<-c(100,30,50,20)
math
df_stu<-data.frame(stu,eng,math)
df_stu
#data_frame 한번에 만들기
rm(df_stu)
rm(eng)
rm(math)
rm(stu)
df_stu<-data.frame(stu=c("지훈","유진","동현","민지"),
eng=c(90,30,50,70),
math=c(50,60,80,56),
class=c(1,1,2,2))
df_stu
x<-c(1,2,3)
lst<-list("홍길동",175.6,5000,T)
x[1]
x[2]
lst[1]
lst[[1]]
y[[2]
y[[2]]
y<-c("홍길동",175.6,5000,T)
y[[2]]
y[2]
x<-c(21,62,10,53)
city<-c("London","Ney York","singapor","Mumbai")
pie(x,city)
#바차트
barplot(x)
#히스토그램
hist(c(23,23,55,76,1,2,5,4,26,88,65,12,96))
hist(c(23,23,55,76,1,2,5,4,26,88,65,12,96))
,xlab="weight"
,col="yellow"
,border="blue"
)
hist(c(23,23,55,76,1,2,5,4,26,88,65,12,96)
,xlab="weight"
,col="yellow"
,border="blue"
)
#라인차트
plot(c(7,12,28,3,41),type="o")
input<-mtcars[,c("mpg","cyl")]
print(head(input))
boxplot(mpg ~ cyl, data=mtcars,
xlab="Numvers",
ylab="Miles",
main="Mileage Data"
)
getwd()
##89쪽 엑셀파일 불러오기
install.packages("readxl")
library(readx1)
library(readxl)
df_exam<-read_excel("excel_exam.xlsx")
df_exam
#데이터에서 평균구하기
mean(df_exam$english)
mean(df_exam&science)
mean(df_exam$science)
df_exam$id
dt_exam<-read_excel("excel_exam_a.xlsx")
dt_exam
#첫 번째 행의 자료가 유실됨
#자료 유실을 피하는 방법
dt_exam<-read_excel("excel_exam_a.xlsx", col_names = F)
dt_exam
#연습 한 번 더
df_exam_novar<-read_excel("C:\\R\\project180714\\excel_exam_novar")
#연습 한 번 더
df_exam_novar<-read_excel("C:\\R\\project180714\\excel_exam_novar.xlsx")
df_exam_novar
df_exam_novar<-read_excel("C:\\R\\project180714\\excel_exam_novar.xlsx", col_names = F)
df_exam_navar
df_exam_novar
#연습 한 번 더
df_exam_novar<-read_excel("C:\\R\\project180714\\excel_exam_novar.xlsx")
df_exam_novar
df_exam_novar<-read_excel("C:\\R\\project180714\\excel_exam_novar.xlsx", col_names = F)
df_exam_novar<-read_excel("C:\\R\\project180714\\excel_exam_novar.xlsx", col_names = F)
df_exam_novar
